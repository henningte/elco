% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantities.R
\name{elco-quantities}
\alias{elco-quantities}
\alias{quantities.elco}
\alias{quantities<-.elco}
\alias{set_quantities.elco}
\alias{errors.elco}
\alias{errors<-.elco}
\alias{set_errors.elco}
\alias{drop_errors.elco}
\alias{units.elco}
\alias{units<-.elco}
\alias{set_units.elco}
\title{Handling quantities in \code{elco} objects}
\usage{
\method{quantities}{elco}(x)

\method{quantities}{elco}(x) <- value

\method{set_quantities}{elco}(
  x,
  unit,
  errors = 0,
  ...,
  mode = units_options("set_units_mode")
)

\method{errors}{elco}(x)

\method{errors}{elco}(x) <- value

\method{set_errors}{elco}(x, value = 0)

\method{drop_errors}{elco}(x)

\method{units}{elco}(x)

\method{units}{elco}(x) <- value

\method{set_units}{elco}(x, value, ..., mode = units_options("set_units_mode"))
}
\arguments{
\item{x}{a numeric object, or object of class \code{quantities}, \code{units}
or \code{errors}.}

\item{value}{a list of two components: an object of class \code{units} or
\code{symbolic_units} (see \code{\link[units]{units}}), and a numeric vector
of length 1 or the same length as \code{x} (see \code{\link[errors]{errors}}).}

\item{unit}{a \code{units} object, or something coercible to one with
\code{as_units} (see \code{\link[units:units]{set_units}}).}

\item{errors}{a numeric vector of length 1 or the same length as \code{x}
(see \code{\link[errors:errors]{set_errors}}).}

\item{...}{passed on to other methods.}

\item{mode}{if \code{"symbols"} (the default), then unit is constructed from
the expression supplied. Otherwise, if\code{mode = "standard"},
standard evaluation is used for the supplied value This argument can be set
via a global option \code{units_options(set_units_mode = "standard")}}
}
\description{
Handling quantities in \code{elco} objects
}
\examples{
## quantities

# quantities.elco
quantities(elco::chno$C)

# `quantities.elco<-`
x <- elco::chno$C
quantities(x) <- list("g/g", 0.1)

# set_quantities
set_quantities(elco::chno$C, unit = "g/g", errors = 0.1, mode = "standard")

## errors

# `errors.elco`
errors::errors(elco::chno$C)

# `errors.elco<-`
x <- elco::chno$C
errors::errors(x) <- 0.1

# set_errors
set_errors(elco::chno$C, value = 0.1)

# drop_errors.elco
errors::drop_errors(elco::chno$C)

## units

# units.elco
units(elco::chno$C)

# `units.elco<-`
x <- elco::chno$C
units(x) <- "g/g"

# set_units
set_units(elco::chno$C, value = "g/g", mode = "standard")

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elco_nosc.R
\name{elco_nosc}
\alias{elco_nosc}
\alias{elco_or}
\alias{elco_du}
\title{Carbon oxidation state, carbon oxidative ratio, and degree of unsaturation}
\usage{
elco_nosc(c, h, n, o)

elco_or(c, h, n, o)

elco_du(c, h, n)
}
\arguments{
\item{c}{An object of class \code{elco} with the amount of C [mol].}

\item{h}{An object of class \code{elco} with the amount of H [mol].}

\item{n}{An object of class \code{elco} with the amount of N [mol].}

\item{o}{An object of class \code{elco} with the amount of O [mol].}
}
\value{
\itemize{
\item \code{elco_nosc}: A \code{\link[quantities:quantities]{quantities}} object with the carbon
oxidation state.
}

\itemize{
\item \code{elco_or}: A \code{\link[quantities:quantities]{quantities}} object with the
oxidative ratio.
}

\itemize{
\item \code{elco_du}: A \code{\link[quantities:quantities]{quantities}} object with the degree
of unsaturation.
}
}
\description{
Functions to compute the carbon oxidation state, carbon oxidative ratio, and
degree of unsaturation with objects of class \code{\link[=elco_new_elco]{elco}}.
}
\section{Functions}{
\itemize{
\item \code{elco_nosc()}: Computes the carbon oxidation
state using the elemental composition of C, H, N, O.

\item \code{elco_or()}: Computes the carbon oxidation
state using the elemental composition of C, H, N, O.

\item \code{elco_du()}: Computes the carbon degree
of unsaturation using the elemental composition of C, H, N.

}}
\examples{
## NOSC
elco::chno \%>\%
  elco::elco_elco_convert_df(
    to = "mol",
    sample_mass = quantities::set_quantities(1, unit = "g", errors = 0)
  ) \%>\%
  dplyr::mutate(nosc = elco_nosc(c = C, h = H, n = N, o = O))

## oxidative ratio
elco::chno \%>\%
  elco::elco_elco_convert_df(
    to = "mol",
    sample_mass = quantities::set_quantities(1, unit = "g", errors = 0)
  ) \%>\%
  dplyr::mutate(or = elco_or(c = C, h = H, n = N, o = O))

## degree of unsaturation
elco::chno \%>\%
  elco::elco_elco_convert_df(
    to = "mol",
    sample_mass = quantities::set_quantities(1, unit = "g", errors = 0)
  ) \%>\%
  dplyr::mutate(du = elco_du(c = C, h = H, n = N))

}
